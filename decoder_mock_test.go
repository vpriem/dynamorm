// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/vpriem/dynamorm (interfaces: DecoderInterface)
//
// Generated by this command:
//
//	mockgen -package=dynamorm_test -destination=decoder_mock_test.go . DecoderInterface
//

// Package dynamorm_test is a generated GoMock package.
package dynamorm_test

import (
	reflect "reflect"

	types "github.com/aws/aws-sdk-go-v2/service/dynamodb/types"
	gomock "go.uber.org/mock/gomock"
)

// MockDecoderInterface is a mock of DecoderInterface interface.
type MockDecoderInterface struct {
	ctrl     *gomock.Controller
	recorder *MockDecoderInterfaceMockRecorder
	isgomock struct{}
}

// MockDecoderInterfaceMockRecorder is the mock recorder for MockDecoderInterface.
type MockDecoderInterfaceMockRecorder struct {
	mock *MockDecoderInterface
}

// NewMockDecoderInterface creates a new mock instance.
func NewMockDecoderInterface(ctrl *gomock.Controller) *MockDecoderInterface {
	mock := &MockDecoderInterface{ctrl: ctrl}
	mock.recorder = &MockDecoderInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDecoderInterface) EXPECT() *MockDecoderInterfaceMockRecorder {
	return m.recorder
}

// Decode mocks base method.
func (m *MockDecoderInterface) Decode(arg0 map[string]types.AttributeValue, arg1 any) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Decode", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Decode indicates an expected call of Decode.
func (mr *MockDecoderInterfaceMockRecorder) Decode(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Decode", reflect.TypeOf((*MockDecoderInterface)(nil).Decode), arg0, arg1)
}
